version: "3.7"

volumes:
  traefik-certificates: {}

networks:
  global-traefik-net:
    external: true
  traefik-net: {}

services:
  traefik:
    image: traefik:v2.3
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `${STACK_NAME?required}-traefik`)
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

      - --certificatesresolvers.${STACK_NAME?required}-lets-encrypt-resolver.acme.email=your-email@example.com
      - --certificatesresolvers.${STACK_NAME?required}-lets-encrypt-resolver.acme.storage=/certs/acme.json
      # used during the challenge
      - --certificatesresolvers.${STACK_NAME?required}-lets-encrypt-resolver.acme.httpchallenge.entrypoint=http
      # used for development
      - --certificatesresolvers.${STACK_NAME?required}-lets-encrypt-resolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --log
      - --accessLog
      - --api
    deploy:
      labels:
        - traefik.enable=true
        - traefik.constraint-label=global-traefik
        - traefik.docker.network=global-traefik-net
        - traefik.http.routers.${STACK_NAME?required}-traefik-http.rule=HostRegexp(`{subdomain:[a-z0-9_-]+}.${APP_DOMAIN?required}`)
        - traefik.http.routers.${STACK_NAME?required}-traefik-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME?required}-traefik-http.service=${STACK_NAME?required}-traefik-http-service
        # HostSNIRegexp is not yet implemented, see https://github.com/traefik/traefik/issues/7266 for updates.
        - traefik.tcp.routers.${STACK_NAME?required}-traefik-https.rule=HostSNI(`web1.${APP_DOMAIN?required}`, `web2.${APP_DOMAIN?required}`)
        - traefik.tcp.routers.${STACK_NAME?required}-traefik-https.service=${STACK_NAME?required}-traefik-tcp-service
        - traefik.tcp.routers.${STACK_NAME?required}-traefik-https.tls=true
        - traefik.tcp.routers.${STACK_NAME?required}-traefik-https.tls.passthrough=true
        - traefik.tcp.routers.${STACK_NAME?required}-traefik-https.entrypoints=https

        - traefik.http.services.${STACK_NAME?required}-traefik-http-service.loadbalancer.server.port=80
        - traefik.tcp.services.${STACK_NAME?required}-traefik-tcp-service.loadbalancer.server.port=443
      mode: replicated
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      replicas: 1

    networks:
      - global-traefik-net
      - traefik-net
    ports: []
      # only for debugging purposes
      # - published: 8002
      #   target: 80
      # - published: 8102
      #   target: 443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/certs
  web1:
    image: frabbit/hello-world-custom
    environment:
      APP: 'web1 ${STACK_NAME?it is required}'
    deploy:
      labels:
        - traefik.enable=true
        - traefik.constraint-label=${STACK_NAME?required}-traefik
        - traefik.docker.network=${STACK_NAME?it is required}_traefik-net

        - traefik.http.routers.${STACK_NAME?required}-web1-http.rule=Host(`web1.${APP_DOMAIN?required}`)
        - traefik.http.routers.${STACK_NAME?required}-web1-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME?required}-web1-http.service=${STACK_NAME?required}-web1-service

        - traefik.http.routers.${STACK_NAME?required}-web1-https.rule=Host(`web1.${APP_DOMAIN?required}`)
        - traefik.http.routers.${STACK_NAME?required}-web1-https.entrypoints=https
        - traefik.http.routers.${STACK_NAME?required}-web1-https.tls=true
        - traefik.http.routers.${STACK_NAME?required}-web1-https.tls.certresolver=${STACK_NAME?required}-lets-encrypt-resolver
        - traefik.http.routers.${STACK_NAME?required}-web1-https.service=${STACK_NAME?required}-web1-service

        - traefik.http.services.${STACK_NAME?required}-web1-service.loadbalancer.server.port=3000

      mode: replicated
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      replicas: 1
    ports: []
      # only for debugging purposes
      # - published: 9003
      #   target: 3000
    networks:
      - traefik-net
